Index: VoxelRender/Player.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System.Numerics;\r\n\r\nnamespace VoxelRender;\r\n\r\npublic class Player\r\n{\r\n    public Vector2 Pos;\r\n    public Vector2 Angles;\r\n    public float Height;\r\n\r\n    public Player()\r\n    {\r\n        Pos = new Vector2(0, 0);\r\n        Angles = new Vector2(MathF.PI / 2, MathF.PI / 9);\r\n        Height = 270;\r\n    }\r\n\r\n    \r\n\r\n    public void Update((Vector2 deltaPos, Vector2 deltaAngle) data)\r\n    {\r\n        Angles += data.deltaAngle * (float) Math.PI / 36;\r\n        Pos += data.deltaPos.RotateRadians(Angles.X) ;\r\n        // Height += data.deltaPos.Z;\r\n        \r\n    }\r\n}\r\n\r\npublic static class VectorExt\r\n{\r\n    private const double DegToRad = Math.PI / 180;\r\n\r\n    public static Vector2 Rotate(this Vector2 v, double degrees)\r\n    {\r\n        return v.RotateRadians(degrees * DegToRad);\r\n    }\r\n\r\n    public static Vector2 RotateRadians(this Vector2 v, double radians)\r\n    {\r\n        var ca = (float) Math.Cos(radians);\r\n        var sa = (float) Math.Sin(radians);\r\n        return new Vector2(ca * v.X - sa * v.Y, sa * v.X + ca * v.Y);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/VoxelRender/Player.cs b/VoxelRender/Player.cs
--- a/VoxelRender/Player.cs	
+++ b/VoxelRender/Player.cs	
@@ -19,8 +19,8 @@
 
     public void Update((Vector2 deltaPos, Vector2 deltaAngle) data)
     {
-        Angles += data.deltaAngle * (float) Math.PI / 36;
-        Pos += data.deltaPos.RotateRadians(Angles.X) ;
+        Angles += data.deltaAngle * (float) Math.PI / 72;
+        Pos += data.deltaPos.RotateRadians(Angles.X)*10 ;
         // Height += data.deltaPos.Z;
         
     }
